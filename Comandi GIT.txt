Lezioni da http://gitreal.codeschool.com/levels/1/challenges/4

$ git config --global user.name "papero"			//Creo utenti generici, non assegnati a un repository specifico
$ git config --global user.name "pennuto"

$ git init											//Creo un repository. Non c'è un nome *-* 
$ git status										//Interrogo il repository, quali sono i file a cui bisogna prestare attenzione?
$ git add <file>									//Aggiungo i file modificati all'indice
$ git commit 										//Committo al repository locale
$ git add css										//Aggiungo la directory css (non ho avuto bisogno di jolly per aggiungere il suo contenuto)
$ git log											//Mostra la storia di tutti i commit eccetera sul repository.

Oh passiamo alla lezione 2, mo committo 'sto file gh

No, non ci vado a fare il resto del corso perché è a pagamento ._.

* ------------------------------------------------------------------------------------------------------- *

https://www.codecademy.com/courses/learn-git/lessons/git-workflow/exercises/hello-git
	git init 	creates a new Git repository
	git status 	inspects the contents of the working directory and staging area
	git add 	adds files from the working directory to the staging area
	git diff 	shows the difference between the working directory and the staging area
	git commit 	permanently stores file changes from the staging area in the repository
	git log 	shows a list of all previous commits

https://www.codecademy.com/en/courses/learn-git/lessons/git-backtracking/exercises/backtracking-intro?action=lesson_resume&link_content_target=interstitial_lesson
	git checkout HEAD filename: Discards changes in the working directory.
	git reset HEAD filename: Unstages file changes in the staging area.
	git reset SHA: Can be used to reset to a previous commit in your commit history.
	
	Additionally, you learned a way to add multiple files to the staging area with a single command:
	git add filename_1 filename_2 (or using jolly with quotes)

https://www.codecademy.com/en/courses/learn-git/lessons/git-branching/exercises/why-branch?action=lesson_resume&link_content_target=interstitial_lesson
